{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.jsx","places/components/PlaceList.jsx","places/pages/UserPlaces.jsx"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","AUthorization","token","onDelete","err","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.711534d9.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        new window.ol.Map({\r\n            target: mapRef.current.id,\r\n            layers: [\r\n                new window.ol.layer.Tile({\r\n                    source: new window.ol.source.OSM()\r\n                })\r\n            ],\r\n            view: new window.ol.View({\r\n                center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n                zoom: zoom\r\n            })\r\n        });\r\n    }, [center, zoom]);\r\n\r\n    return (\r\n        <div\r\n            ref={mapRef}\r\n            className={`map ${props.className}`}\r\n            style={props.style}\r\n            id=\"map\"\r\n        ></div>\r\n    );\r\n};\r\n\r\nexport default Map;","import React, { useState, useContext } from 'react';\r\n\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './PlaceItem.css';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\nconst PlaceItem = (props) => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [showMap, setShowMap] = useState(false);\r\n\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    const openMapHandler = () => { setShowMap(true) };\r\n\r\n    const closeMapHandler = () => { setShowMap(false) };\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    };\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    };\r\n\r\n    const confirmDeleteHandler = async () => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    AUthorization: 'Bearer ' + auth.token\r\n                }\r\n\r\n            );\r\n            props.onDelete(props.id);\r\n        } catch (err) { }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={closeMapHandler}\r\n                header={props.address}\r\n                contentClass='place-item__modal-content'\r\n                footerClass='place-item__modal-actions'\r\n                footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.coordinates} zoom={16} />\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n                    </React.Fragment>}\r\n            >\r\n                <p>Do you want to delete this place? Please note that it can't be undone.</p>\r\n            </Modal>\r\n            <li className=\"place-item\">\r\n                <Card>\r\n                    {isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className=\"place-item__image\">\r\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n                    </div>\r\n                    <div className=\"place-item__info\">\r\n                        <h2>{props.title}</h2>\r\n                        <h3>{props.address}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"place-item__actions\">\r\n                        <Button inverse onClick={openMapHandler}>View on Map</Button>\r\n                        {auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>Edit</Button>}\r\n                        {auth.userId === props.creatorId && <Button danger onClick={showDeleteWarningHandler}>Delete</Button>}\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PlaceItem;","import React from 'react';\r\n\r\nimport PlaceItem from './PlaceItem';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <div className=\"place-list center\">\r\n            <Card>\r\n                <h2>No Places Found! Maybe create one?</h2>\r\n                <Button to=\"/places/new\">Share Place</Button>\r\n            </Card>\r\n        </ div>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map(place =>\r\n                <PlaceItem\r\n                    key={place.id}\r\n                    id={place.id}\r\n                    image={place.image}\r\n                    title={place.title}\r\n                    description={place.description}\r\n                    address={place.address}\r\n                    creatorId={place.creator}\r\n                    coordinates={place.location}\r\n                    onDelete={props.onDeletePlace}\r\n                />)}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PlaceList;","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nconst UserPlaces = () => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const fetchPlaces = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n                setLoadedPlaces(responseData.places);\r\n            } catch (err) { }\r\n        };\r\n        fetchPlaces();\r\n    }, [sendRequest, userId])\r\n\r\n    const placeDeletedHandler = (deletedPlaceId) => {\r\n        setLoadedPlaces(prevPlaces =>\r\n            prevPlaces.filter(places => places.id !== deletedPlaceId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {\r\n                !isLoading && loadedPlaces &&\r\n                <PlaceList\r\n                    items={loadedPlaces}\r\n                    onDeletePlace={placeDeletedHandler}\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}