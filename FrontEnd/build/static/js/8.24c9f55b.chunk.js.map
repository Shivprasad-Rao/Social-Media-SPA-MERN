{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.jsx","user/components/UsersList.jsx","user/pages/Users.jsx"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","item","length","map","user","key","places","Users","useHttpClient","isLoading","error","clearError","sendRequest","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"2FAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,+LCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,YCepCE,G,MAlBE,SAACV,GACd,OACI,wBAAIC,UAAU,aACV,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACZ,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACJ,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKO,wBAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAEnF,yBAAKb,UAAU,mBACX,qCAAWD,EAAMc,MACjB,4BAA0B,IAArBd,EAAMe,WAAmB,UAAY,WAAYf,EAAMe,kBCgBrEC,G,MA3BG,SAAChB,GACf,OAA0B,IAAtBA,EAAMiB,KAAKC,OAEP,yBAAKjB,UAAU,UACX,kBAACF,EAAA,EAAD,KACI,iDAMZ,wBAAIE,UAAU,cACTD,EAAMiB,KAAKE,KAAI,SAAAC,GACZ,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAKR,GACVE,KAAMM,EAAKN,KACXR,MAAOc,EAAKd,MACZM,GAAIQ,EAAKR,GACTG,WAAYK,EAAKE,OAAOJ,e,wBCUjCK,UA5BD,WAAO,IAAD,EACsCC,cAA9CC,EADQ,EACRA,UAAWC,EADH,EACGA,MAAOC,EADV,EACUA,WAAYC,EADtB,EACsBA,YADtB,EAEsBC,qBAFtB,mBAETC,EAFS,KAEIC,EAFJ,KAehB,OAZAC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEgBL,EACvBf,mCAHO,OAELqB,EAFK,OAKXH,EAAeG,EAAaC,OALjB,uGAAH,qDAQhBC,KACD,CAACR,IAGA,kBAAC,IAAMS,SAAP,KACI,kBAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASZ,IAClCF,GACG,yBAAKxB,UAAU,UACX,kBAACuC,EAAA,EAAD,QAGNf,GAAaK,GAAe,kBAAC,EAAD,CAAUb,KAAMa","file":"static/js/8.24c9f55b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = (props) => {\r\n    return (\r\n        <li className='user-item'>\r\n            <Card className='user-item__content'>\r\n                <Link to={`/${props.id}/places`}>\r\n                    <div className='user-item__image'>\r\n                        <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n                    </div>\r\n                    <div className='user-item__info'>\r\n                        <h2>Name: {props.name}</h2>\r\n                        <h3>{props.placeCount === 1 ? \"Place: \" : \"Places: \"}{props.placeCount}</h3>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = (props) => {\r\n    if (props.item.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>No Users Found!</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <ul className='users-list'>\r\n            {props.item.map(user => {\r\n                return (\r\n                    <UserItem\r\n                        key={user.id}\r\n                        name={user.name}\r\n                        image={user.image}\r\n                        id={user.id}\r\n                        placeCount={user.places.length}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from 'react';\r\n\r\nimport UserList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n    const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + '/users'\r\n                );\r\n                setLoadedUsers(responseData.users);//the response in API has 'users' as key.\r\n            } catch (err) { }\r\n        };\r\n        fetchUsers();\r\n    }, [sendRequest]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedUsers && <UserList item={loadedUsers} />}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Users;"],"sourceRoot":""}